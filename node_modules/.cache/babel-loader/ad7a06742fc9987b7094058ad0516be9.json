{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\React Native\\\\wasteeliminator\\\\src\\\\components\\\\Alert\\\\Alert.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport Map from \"../Map/Map\";\nimport Post from \"../Post/Post\";\nimport AddPost from \"../Post/AddPost\";\nimport PostCard from \"../UI/Card/PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flag = true;\n\nconst Alert = ({\n  token\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState();\n  const [updatedData, setUpdatedData] = useState(flag);\n  const [location, setLocation] = useState({\n    lat: 0,\n    long: 0\n  });\n  const [geoError, setGeoError] = useState(\"\");\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(position => setLocation({\n      lat: position.coords.latitude,\n      long: position.coords.longitude\n    }), err => setGeoError(err.message));\n  }, []);\n  useEffect(() => {\n    const url = \"https://waste-eliminator-api.us-south.cf.appdomain.cloud/datas\";\n    fetch(url).then(res => res.json()).then(data => {\n      setPosts(data.datas);\n    });\n  }, [updatedData]);\n\n  const submitPostHandler = async payload => {\n    try {\n      const response = await fetch(\"https://waste-eliminator-api.us-south.cf.appdomain.cloud/datas\", {\n        method: \"POST\",\n        body: payload,\n        headers: {\n          Authorization: token\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      setUpdatedData(!flag);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      updatedData: updatedData,\n      style: \"post\",\n      height: \"100%\",\n      width: \"68%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostCard, {\n      children: [token && /*#__PURE__*/_jsxDEV(AddPost, {\n        onConfirm: submitPostHandler,\n        location: location,\n        geoError: geoError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), !token && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: '6rem'\n          },\n          children: \"You must login to make an alert.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), posts && posts.slice(posts.length - 5, posts.length).reverse().map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          id: post._id,\n          lat: post.location.lat,\n          long: post.location.long,\n          wasteType: post.wasteType,\n          image: post.image\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Alert, \"D+5wKurfmlBa8wWL5vE2qIfImfE=\");\n\n_c = Alert;\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["C:/Users/HP/Documents/React Native/wasteeliminator/src/components/Alert/Alert.js"],"names":["Fragment","useState","useEffect","Map","Post","AddPost","PostCard","flag","Alert","token","posts","setPosts","updatedData","setUpdatedData","location","setLocation","lat","long","geoError","setGeoError","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","message","url","fetch","then","res","json","data","datas","submitPostHandler","payload","response","method","body","headers","Authorization","console","log","marginTop","slice","length","reverse","map","post","_id","wasteType","image"],"mappings":"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","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\nimport Map from \"../Map/Map\";\nimport Post from \"../Post/Post\";\nimport AddPost from \"../Post/AddPost\";\nimport PostCard from \"../UI/Card/PostCard\";\n\nconst flag = true;\n\nconst Alert = ({ token }) => {\n  const [posts, setPosts] = useState();\n  const [updatedData, setUpdatedData] = useState(flag);\n  const [location, setLocation] = useState({ lat: 0, long: 0 });\n  const [geoError, setGeoError] = useState(\"\");\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) =>\n        setLocation({\n          lat: position.coords.latitude,\n          long: position.coords.longitude,\n        }),\n      (err) => setGeoError(err.message)\n    );\n  }, []);\n\n  useEffect(() => {\n    const url = \"https://waste-eliminator-api.us-south.cf.appdomain.cloud/datas\"\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        setPosts(data.datas);\n      });\n  }, [updatedData]);\n\n  const submitPostHandler = async (payload) => {\n    try {\n      const response = await fetch(\n        \"https://waste-eliminator-api.us-south.cf.appdomain.cloud/datas\",\n        {\n          method: \"POST\",\n          body: payload,\n          headers: {\n            Authorization: token,\n          },\n        }\n      );\n\n      const data = await response.json();\n      console.log(data);\n      setUpdatedData(!flag);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n \n  return (\n    <Fragment>\n      <Map updatedData={updatedData} style=\"post\" height=\"100%\" width=\"68%\" />\n      <PostCard>\n        {token && (\n          <AddPost\n          onConfirm={submitPostHandler}\n          location={location}\n          geoError={geoError}\n        />\n        )}\n        {!token && (\n          <div>\n            <h2 style={{ marginTop: '6rem'}}>You must login to make an alert.</h2>\n          </div>\n        )\n\n        }\n      </PostCard>\n\n      {posts && posts.slice(posts.length-5, posts.length).reverse().map((post) => (\n        <PostCard>\n          <ul key={post._id}>\n            <Post\n              id={post._id}\n              key={post._id}\n              lat={post.location.lat}\n              long={post.location.long}\n              wasteType={post.wasteType}\n              image={post.image}\n            />\n          </ul>\n        </PostCard>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}