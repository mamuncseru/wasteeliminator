{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\React Native\\\\wasteeliminator\\\\src\\\\components\\\\Alert\\\\Alert.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport Map from \"../Map/Map\";\nimport Post from \"../Post/Post\";\nimport AddPost from \"../Post/AddPost\";\nimport PostCard from \"../UI/Card/PostCard\";\nimport logo192 from \"../../photos/6.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: 1,\n  wasteType: \"Municipal\",\n  lat: 0,\n  long: 1,\n  image: logo192\n}, {\n  id: 6,\n  wasteType: \"Toxic\",\n  lat: 0,\n  long: 1,\n  image: logo192\n}, {\n  id: 2,\n  wasteType: \"Liquid\",\n  lat: 0,\n  long: 1,\n  image: logo192\n}, {\n  id: 3,\n  wasteType: \"Toxic\",\n  lat: 0,\n  long: 1,\n  image: logo192\n}, {\n  id: 4,\n  wasteType: \"Municipal\",\n  lat: 0,\n  long: 1,\n  image: logo192\n}, {\n  id: 5,\n  wasteType: \"Electronics\",\n  lat: 0,\n  long: 1,\n  image: logo192\n}];\n\nconst Alert = ({\n  token\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState(DUMMY_DATA);\n  const [location, setLocation] = useState({\n    lat: 0,\n    long: 0\n  });\n  const [geoError, setGeoError] = useState(\"\");\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(position => setLocation({\n      lat: position.coords.latitude,\n      long: position.coords.longitude\n    }), err => setGeoError(err.message));\n  }, []);\n\n  const submitPostHandler = async payload => {\n    console.log(\"sending...\");\n\n    try {\n      const response = await fetch(\"http://waste-alert-api.herokuapp.com/datas\", {\n        method: \"POST\",\n        body: payload,\n        headers: {\n          Authorization: token\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      style: \"post\",\n      height: \"100%\",\n      width: \"68%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostCard, {\n      children: /*#__PURE__*/_jsxDEV(AddPost, {\n        onConfirm: submitPostHandler,\n        location: location,\n        geoError: geoError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          id: post.id,\n          lat: post.lat,\n          long: post.long,\n          wasteType: post.wasteType,\n          image: post.image\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Alert, \"NH1h/NKEOOiXYlLfJ/OXH6UwMv8=\");\n\n_c = Alert;\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["C:/Users/HP/Documents/React Native/wasteeliminator/src/components/Alert/Alert.js"],"names":["Fragment","useState","useEffect","Map","Post","AddPost","PostCard","logo192","DUMMY_DATA","id","wasteType","lat","long","image","Alert","token","posts","setPosts","location","setLocation","geoError","setGeoError","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","message","submitPostHandler","payload","console","log","response","fetch","method","body","headers","Authorization","data","json","map","post"],"mappings":"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","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\nimport Map from \"../Map/Map\";\nimport Post from \"../Post/Post\";\nimport AddPost from \"../Post/AddPost\";\nimport PostCard from \"../UI/Card/PostCard\";\nimport logo192 from \"../../photos/6.jpg\";\n\nconst DUMMY_DATA = [\n  {\n    id: 1,\n    wasteType: \"Municipal\",\n    lat: 0,\n    long: 1,\n    image: logo192,\n  },\n  {\n    id: 6,\n    wasteType: \"Toxic\",\n    lat: 0,\n    long: 1,\n    image: logo192,\n  },\n  {\n    id: 2,\n    wasteType: \"Liquid\",\n    lat: 0,\n    long: 1,\n    image: logo192,\n  },\n  {\n    id: 3,\n    wasteType: \"Toxic\",\n    lat: 0,\n    long: 1,\n    image: logo192,\n  },\n  {\n    id: 4,\n    wasteType: \"Municipal\",\n    lat: 0,\n    long: 1,\n    image: logo192,\n  },\n  {\n    id: 5,\n    wasteType: \"Electronics\",\n    lat: 0,\n    long: 1,\n    image: logo192,\n  },\n];\n\nconst Alert = ({ token }) => {\n  const [posts, setPosts] = useState(DUMMY_DATA);\n  const [location, setLocation] = useState({ lat: 0, long: 0 });\n  const [geoError, setGeoError] = useState(\"\");\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) =>\n        setLocation({\n          lat: position.coords.latitude,\n          long: position.coords.longitude,\n        }),\n      (err) => setGeoError(err.message)\n    );\n  }, []);\n\n  const submitPostHandler = async (payload) => {\n    console.log(\"sending...\");\n    try {\n      const response = await fetch(\n        \"http://waste-alert-api.herokuapp.com/datas\",\n        {\n          method: \"POST\",\n          body: payload,\n          headers: {\n            Authorization: token,\n          },\n        }\n      );\n\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Map style=\"post\" height=\"100%\" width=\"68%\" />\n      <PostCard>\n        <AddPost\n          onConfirm={submitPostHandler}\n          location={location}\n          geoError={geoError}\n        />\n      </PostCard>\n\n      {posts.map((post) => (\n        <PostCard>\n          <ul key={post.id}>\n            <Post\n              id={post.id}\n              key={post.id}\n              lat={post.lat}\n              long={post.long}\n              wasteType={post.wasteType}\n              image={post.image}\n            />\n          </ul>\n        </PostCard>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}