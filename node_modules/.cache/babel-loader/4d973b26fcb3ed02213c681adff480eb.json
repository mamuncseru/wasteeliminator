{"ast":null,"code":"import _slicedToArray from\"C:/Users/HP/Documents/React Native/wasteeliminator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useReducer,useEffect,useState}from\"react\";import Button from\"../UI/Button/Button\";import Modal from\"../UI/Modal/Modal\";import classes from\"./Input.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var emailReducer=function emailReducer(state,action){if(action.type===\"USER_INPUT\"){return{value:action.val,isValid:action.val.includes(\"@\")};}if(action.type===\"INPUT_BLUR\"){return{value:state.value,isValid:state.value.includes(\"@\")};}return{value:\"\",isValid:false};};var passwordReducer=function passwordReducer(state,action){if(action.type===\"USER_INPUT\"){return{value:action.val,isValid:action.val.trim().length>6};}if(action.type===\"INPUT_BLUR\"){return{value:state.value,isValid:state.value.trim().length>6};}return{value:\"\",isValid:false};};var Login=function Login(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),formIsValid=_useState2[0],setFormIsValid=_useState2[1];var emailRef=useRef();var passwordRef=useRef();var _useReducer=useReducer(emailReducer,{value:\"\",isValid:false}),_useReducer2=_slicedToArray(_useReducer,2),emailState=_useReducer2[0],dispatchEmail=_useReducer2[1];var _useReducer3=useReducer(passwordReducer,{value:\"\",isValid:null}),_useReducer4=_slicedToArray(_useReducer3,2),passwordState=_useReducer4[0],dispatchPassword=_useReducer4[1];var emailIsValid=emailState.isValid;var passwordIsValid=passwordState.isValid;useEffect(function(){var identifier=setTimeout(function(){console.log(\"Checking form validity\");setFormIsValid(emailIsValid&&passwordIsValid);},500);return function(){console.log(\"CLEANUP\");clearTimeout(identifier);};},[emailIsValid,passwordIsValid]);var emailChangeHandler=function emailChangeHandler(event){dispatchEmail({type:\"USER_INPUT\",val:event.target.value});};var passwordChangeHandler=function passwordChangeHandler(event){dispatchPassword({type:\"USER_INPUT\",val:event.target.value});};var validateEmailHandler=function validateEmailHandler(){dispatchEmail({type:\"INPUT_BLUR\"});};var validatePasswordHandler=function validatePasswordHandler(){dispatchPassword({type:\"INPUT_BLUR\"});};var slideHandler=function slideHandler(){props.onClose();props.onShowSignup();};var submitHandler=function submitHandler(event){event.preventDefault();if(formIsValid){var payload={email:emailState.value,password:passwordState.value};props.onConfirm(payload);}else if(!emailIsValid){emailRef.current.focus();}else{passwordRef.current.focus();}// const enteredEmail = emailRef.current.value;\n// const enteredPassword = passwordRef.current.value;\n// console.log(enteredEmail, enteredPassword);\nprops.onClose();};return/*#__PURE__*/_jsx(Modal,{onClose:props.onClose,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,className:classes.body,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Sign In to Waste Eliminator\"}),/*#__PURE__*/_jsxs(\"div\",{className:classes.input,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{ref:emailRef,id:\"email\",label:\"E-mail\",type:\"email\",value:emailState.value,onChange:emailChangeHandler,onBlur:validateEmailHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.input,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{ref:passwordRef,id:\"password\",label:\"Password\",type:\"password\",value:passwordState.value,onChange:passwordChangeHandler,onBlur:validatePasswordHandler})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"div\",{className:classes.changeForm,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Not a registered user?\"}),/*#__PURE__*/_jsx(\"button\",{onClick:slideHandler,children:\"Go to Signup\"})]})]})});};export default Login;","map":{"version":3,"sources":["C:/Users/HP/Documents/React Native/wasteeliminator/src/components/EntryForm/Login.js"],"names":["useRef","useReducer","useEffect","useState","Button","Modal","classes","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailRef","passwordRef","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","slideHandler","onClose","onShowSignup","submitHandler","preventDefault","payload","email","password","onConfirm","current","focus","body","input","changeForm"],"mappings":"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","sourcesContent":["import { useRef, useReducer, useEffect, useState } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport Modal from \"../UI/Modal/Modal\";\nimport classes from \"./Input.module.css\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const slideHandler = () => {\n    props.onClose();\n    props.onShowSignup();\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      const payload = {email: emailState.value, password: passwordState.value}\n\n      props.onConfirm(payload)\n\n    } else if (!emailIsValid) {\n      emailRef.current.focus();\n    } else {\n      passwordRef.current.focus();\n    }\n\n    // const enteredEmail = emailRef.current.value;\n    // const enteredPassword = passwordRef.current.value;\n\n    // console.log(enteredEmail, enteredPassword);\n\n    props.onClose();\n  };\n\n  return (\n    <Modal onClose={props.onClose}>\n      <form onSubmit={submitHandler} className={classes.body}>\n        <h3>Sign In to Waste Eliminator</h3>\n        <div className={classes.input}>\n          <label>Email</label>\n          <input\n            ref={emailRef}\n            id=\"email\"\n            label=\"E-mail\"\n            type=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div className={classes.input}>\n          <label>Password</label>\n          <input\n            ref={passwordRef}\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <Button type=\"submit\">Login</Button>\n        <div className={classes.changeForm}>\n          <p>Not a registered user?</p>\n          <button onClick={slideHandler}>Go to Signup</button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}