{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\React Native\\\\wasteeliminator\\\\src\\\\components\\\\Map\\\\MarkerClusterer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport locdata from './mockLocation.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetch = require(\"isomorphic-fetch\");\n\nconst {\n  compose,\n  withProps,\n  withHandlers\n} = require(\"recompose\");\n\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} = require(\"react-google-maps\");\n\nconst {\n  MarkerClusterer\n} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\n\nconst MapWithAMarkerClusterer = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBZibHlhg2TX5MQuzQzr7h3cPTtZhfo7MY&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `100%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this),\n  mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `90%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }, this)\n}), withHandlers({\n  onMarkerClustererClick: () => markerClusterer => {\n    const clickedMarkers = markerClusterer.getMarkers();\n    console.log(`Current clicked markers length: ${clickedMarkers.length}`);\n    console.log(clickedMarkers);\n  }\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n  defaultZoom: 3,\n  defaultCenter: {\n    lat: 25.0391667,\n    lng: 121.525\n  },\n  children: /*#__PURE__*/_jsxDEV(MarkerClusterer, {\n    onClick: props.onMarkerClustererClick,\n    averageCenter: true,\n    enableRetinaIcons: true,\n    gridSize: 60,\n    children: props.markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: marker.lat,\n        lng: marker.long\n      }\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this));\n\nconst mockLocation = () => {\n  const data = locdata.map(item => ({\n    lat: parseFloat(item.latitude),\n    long: parseFloat(item.longitude)\n  }));\n  console.log(data); // console.log('testing .....');\n\n  return data; // return 1;\n};\n\nconst arr = locdata.map(item => ({\n  lat: parseFloat(item.latitude),\n  long: parseFloat(item.longitude)\n}));\n\nconst Markerclusterer = props => {\n  _s();\n\n  const [markers, setMarkers] = useState([]);\n  console.log(typeof markers);\n  console.log(arr.map(item => item.lat));\n  useEffect(() => {\n    // const url = [\n    //   // Length issue\n    //   `https://gist.githubusercontent.com`,\n    //   `/farrrr/dfda7dd7fccfec5474d3`,\n    //   `/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`\n    // ].join(\"\")\n    // fetch(url)\n    //   .then(res => res.json())\n    //   .then(data => {\n    //     setMarkers(data.photos);\n    //   });\n    const url = \"https://waste-eliminator-api.us-south.cf.appdomain.cloud/datas\";\n    fetch(url).then(res => res.json()).then(data => {\n      const fetchArray = data.datas.map(item => ({\n        lat: parseFloat(item.location.lat),\n        long: parseFloat(item.location.long)\n      }));\n      const newArray = [...arr, ...fetchArray];\n      console.log(newArray);\n      setMarkers(newArray); // setMarkers(data.datas.map((item) => ({lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)})));\n    }); //   data.datas.map((item) => (\n    //     setMarkers(marks => [...marks, {lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)}])\n    //   ));\n    //   // setMarkers(marks => [...marks, data.datas.map((item) => ({lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)}))]);\n    //   // setMarkers(data.datas.map((item) => ({lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)})));\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapWithAMarkerClusterer, {\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `${props.height}`,\n        width: `${props.width}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this),\n    markers: markers\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Markerclusterer, \"aVe0o7Xd1RI2qqyy9XuFimi/3oU=\");\n\n_c = Markerclusterer;\nexport default Markerclusterer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Markerclusterer\");","map":{"version":3,"sources":["C:/Users/HP/Documents/React Native/wasteeliminator/src/components/Map/MarkerClusterer.js"],"names":["React","useEffect","useState","locdata","fetch","require","compose","withProps","withHandlers","withScriptjs","withGoogleMap","GoogleMap","Marker","MarkerClusterer","MapWithAMarkerClusterer","googleMapURL","loadingElement","height","mapElement","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","console","log","length","props","lat","lng","markers","map","marker","long","Math","random","mockLocation","data","item","parseFloat","latitude","longitude","arr","Markerclusterer","setMarkers","url","then","res","json","fetchArray","datas","location","newArray","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport locdata from './mockLocation.json';\nconst fetch = require(\"isomorphic-fetch\");\nconst { compose, withProps, withHandlers } = require(\"recompose\");\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} = require(\"react-google-maps\");\nconst {\n  MarkerClusterer,\n} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\n\nconst MapWithAMarkerClusterer = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBZibHlhg2TX5MQuzQzr7h3cPTtZhfo7MY&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    mapElement: <div style={{ height: `90%` }} />,\n  }),\n  withHandlers({\n    onMarkerClustererClick: () => (markerClusterer) => {\n      const clickedMarkers = markerClusterer.getMarkers();\n      console.log(`Current clicked markers length: ${clickedMarkers.length}`);\n      console.log(clickedMarkers);\n    },\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={3} defaultCenter={{ lat: 25.0391667, lng: 121.525 }}>\n    <MarkerClusterer\n      onClick={props.onMarkerClustererClick}\n      averageCenter\n      enableRetinaIcons\n      gridSize={60}\n    >\n      {props.markers.map((marker) => (\n        <Marker\n          key={Math.random()}\n          position={{ lat: marker.lat, lng: marker.long }}\n        />\n      ))}\n    </MarkerClusterer>\n  </GoogleMap>\n));\n\n\nconst mockLocation = () => {\n  const data = (locdata.map((item) => ({lat: parseFloat(item.latitude), long: parseFloat(item.longitude)})));\n  console.log(data);\n  // console.log('testing .....');\n  return data;\n  // return 1;\n}\nconst arr = locdata.map((item) => ({lat: parseFloat(item.latitude), long: parseFloat(item.longitude)}));\n\nconst Markerclusterer = (props) => {\n \n  const [markers, setMarkers] = useState([]);\n\n\n  console.log(typeof(markers));\n  console.log(arr.map(item => item.lat));\n\n  useEffect(() => {\n    // const url = [\n    //   // Length issue\n    //   `https://gist.githubusercontent.com`,\n    //   `/farrrr/dfda7dd7fccfec5474d3`,\n    //   `/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`\n    // ].join(\"\")\n\n    // fetch(url)\n    //   .then(res => res.json())\n    //   .then(data => {\n    //     setMarkers(data.photos);\n    //   });\n    const url =\n      \"https://waste-eliminator-api.us-south.cf.appdomain.cloud/datas\";\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => \n      {\n        const fetchArray = data.datas.map((item) => ({lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)}));\n        const newArray = [...arr, ...fetchArray];\n        console.log(newArray);\n        setMarkers(newArray);\n        // setMarkers(data.datas.map((item) => ({lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)})));\n      })\n      //   data.datas.map((item) => (\n      //     setMarkers(marks => [...marks, {lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)}])\n      //   ));\n      //   // setMarkers(marks => [...marks, data.datas.map((item) => ({lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)}))]);\n      //   // setMarkers(data.datas.map((item) => ({lat: parseFloat(item.location.lat), long: parseFloat(item.location.long)})));\n      // });\n  }, []);\n\n\n\n  return (\n    <MapWithAMarkerClusterer\n      containerElement={\n        <div style={{ height: `${props.height}`, width: `${props.width}` }} />\n      }\n      markers={markers}\n    />\n  );\n};\n\nexport default Markerclusterer;\n"]},"metadata":{},"sourceType":"module"}